# Author: The-Lum
# Script: 
# The script generates all the `.puml` files (from all `.puml` files of the `input` directory)
# for all style definitions on the `gallery` directory

# Usage one of: generate_all_puml_files.pl <collection_name> <collection_name> <directive> [<prefix>]
# generate_all_puml_files.pl diagrams themes
# generate_all_puml_files.pl diagrams skins
# generate_all_puml_files.pl stdlibs themes
# generate_all_puml_files.pl stdlibs skins


use strict;
use warnings;
use autodie;
use File::Basename;

my ($input_collection, $style_collection) = @ARGV;

my $output_prefix = '';
if ($input_collection eq 'stdlibs') {
    $output_prefix = 'stdlib-';
}

my $style_directive = '!theme';
if ($style_collection eq 'skins') {
    $style_directive = 'skin';
}

my $gallery_header = <<EOT;
' Do not edit
' Theme Gallery
' autogenerated by script
'
EOT

sub extract_yaml_frontmatter {
    my ($file) = @_;
    open my $fh, '<', $file;
    my $yaml_text = '';
    my $in_yaml = 0;

    while (<$fh>) {
        if (/^---\s*$/) {
            $in_yaml = !$in_yaml;
            next;
        }
        $yaml_text .= $_ if $in_yaml;
    }
    close $fh;

    return $yaml_text;
}

sub write_file {
    my ($input, $output, $directives) = @_;

    # Input File
    open(my $fh, '<', $input);
    # Output File
    open(my $fho, '>:encoding(UTF-8)', 'gallery/' . $output);

    print $fho $gallery_header;
    while (<$fh>) {
        $_ .= $directives if $. == 1;
        print $fho $_;
    }

    close($fho);
    close($fh);
}

# Input files: all the .puml files from the collection
my @input_files = glob("collections/_" . $input_collection . "/input/*.puml");

# Style files: all the .md files from the collection
my @style_files = glob("collections/_" . $style_collection . "/*.md");

foreach my $f (@input_files) {
    foreach my $s (@style_files) {
        (my $input_name = basename($f)) =~ s/\.[^.]+$//;

        my $style_front_matter = extract_yaml_frontmatter($s);
        my $style_name = $style_front_matter =~ /^name:\s*(.+)$/m;

        my $mode_directive = $style_front_matter =~ /^mode_directive:\s*'(.+)'$/m;
        my $outline_directive = $style_front_matter =~ /^outline_directive:\s*'(.+)'$/m;

        write_file(
            $f,
            'themed-input/' . $output_prefix . $input_name . '-' . $style_name . '.puml',
            $style_directive . " $style_name\n");

        if (defined($outline_directive)) {
            write_file(
                $f,
                'themed-input/' . $output_prefix . $input_name . '-' . $style_name . '-outline.puml',
                $outline_directive . "\n" . $style_directive . " $style_name\n");
        }

        if (defined($mode_directive)) {
            write_file(
                $f,
                'themed-input/' . $output_prefix . $input_name . '-' . $style_name . '-dark.puml',
                $mode_directive . "\n" . $style_directive . " $style_name\n");

            if (defined($outline_directive)) {
                write_file(
                    $f,
                    'themed-input/' . $output_prefix . $input_name . '-' . $style_name . '-outline-dark.puml',
                    $outline_directive . "\n" . $mode_directive . "\n" . $style_directive . " $style_name\n");
            }
        }
    }
}
